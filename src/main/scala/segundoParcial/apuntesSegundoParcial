class Perro {
  def ladrar = println("uau uau")
}

class Chihuahua extends Perro {
  //undefine ladrar : prohibido por el principio de sustitucion de lisvko
  //si B es un subtipo de A(B <: A), todo lo que se puede hacer con A, tambien se puede hacer con B
}

//Chihuahua <: Perro

val p : Perro = new Chihuahua

//List[Chihuahua] es una lista de perros (List[Chihuahua] <: List[Perro])? R. Si
val l : List[Perro] = new Cons[Chihuahua](new Chihuahua(), new Nil)


//Estudio de la varianza
//Tenemos G[T]
//B <: A
//G[B] <: G[A] = G es covariante
//G[A] <: G[B] = G es contravariante
//G[B] <: G[A] = G es no-Variante
